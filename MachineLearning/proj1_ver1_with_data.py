import mysql.connector
import time
import datetime

## This file include the daily event recognition module, event insertion module and 1006 random data.
## It also simutates insertion procedure with 7 real coming events.
## This file contains functions which meet behaviors of 1, 2, 3, 4, 5, 6, 7 and 12.
## We do not have recongition functions for weekly, weekday/weekend's patterns or linked events.
## Weekly, weekdays' and weekends' pattern recognition functions will be done soon.
## But linked event recognition module needs time to develop.


#test#
StartTime = time.time()
#test#


conn = mysql.connector.connect(user='root', password='4tb6', database='test', use_unicode=True)
cursor = conn.cursor()

#CreatedData#
D = [[2016,8,10,9,10,36,2,1,0,0],
[2016,7,3,9,10,38,1,1,0,0],
[2016,7,4,9,13,10,2,1,1,1],
[2016,8,9,9,14,39,2,0,0,0],
[2016,8,13,9,12,26,2,1,0,1],
[2016,8,30,9,14,45,2,1,1,1],
[2016,8,11,9,9,22,3,1,0,1],
[2016,7,17,9,14,48,1,0,0,1],
[2016,8,7,9,14,26,2,1,1,0],
[2016,8,17,9,11,15,1,0,0,1],
[2016,8,23,9,8,23,2,0,0,1],
[2016,7,24,9,14,30,2,1,0,1],
[2016,7,2,9,14,17,2,1,0,1],
[2016,8,15,9,9,44,2,0,0,0],
[2016,7,11,9,11,1,2,1,0,1],
[2016,8,13,9,9,55,3,1,1,1],
[2016,8,4,9,12,6,3,1,0,1],
[2016,7,28,9,11,43,3,0,1,0],
[2016,7,9,9,12,45,2,1,0,1],
[2016,7,22,9,8,24,3,1,0,1],
[2016,7,27,9,10,56,3,0,0,1],
[2016,7,16,9,15,57,3,1,1,1],
[2016,7,20,9,14,1,2,1,0,0],
[2016,8,23,9,15,50,1,1,1,1],
[2016,8,16,9,10,49,2,0,0,1],
[2016,7,24,9,9,17,2,1,1,1],
[2016,7,1,9,8,25,2,1,1,1],
[2016,7,20,9,14,59,2,0,0,0],
[2016,8,12,9,8,48,1,1,0,0],
[2016,7,31,9,13,2,2,1,0,0],
[2016,7,26,9,10,0,2,0,1,0],
[2016,7,11,10,4,9,3,1,1,1],
[2016,7,11,9,8,32,2,0,1,1],
[2016,8,18,9,12,49,2,1,1,1],
[2016,8,13,9,11,37,2,0,1,1],
[2016,7,23,9,11,42,2,1,1,1],
[2016,7,30,9,12,31,2,1,0,0],
[2016,7,18,9,13,35,2,0,0,1],
[2016,8,23,9,14,52,3,1,0,1],
[2016,8,27,9,10,36,2,0,1,0],
[2016,8,23,9,15,8,1,0,0,1],
[2016,8,15,9,11,4,3,1,1,1],
[2016,8,4,9,12,26,1,0,0,0],
[2016,8,14,9,11,49,1,1,1,1],
[2016,8,26,9,10,30,2,1,0,1],
[2016,7,12,9,10,36,3,1,1,1],
[2016,7,24,9,8,44,1,1,0,0],
[2016,8,15,9,14,31,3,1,1,0],
[2016,7,5,9,14,40,2,1,0,1],
[2016,8,10,9,11,1,2,1,1,1],
[2016,8,28,9,9,45,2,0,0,0],
[2016,8,12,9,8,13,1,0,1,1],
[2016,8,24,9,10,28,3,0,1,1],
[2016,7,17,9,12,24,3,0,1,0],
[2016,8,26,9,14,59,2,0,0,1],
[2016,7,4,9,13,20,2,0,0,1],
[2016,7,22,9,11,19,2,1,1,1],
[2016,8,29,9,11,40,2,0,1,0],
[2016,8,14,9,8,5,1,1,1,1],
[2016,7,13,9,10,30,3,1,1,0],
[2016,7,19,9,10,56,3,1,0,0],
[2016,8,18,9,13,44,3,0,0,0],
[2016,8,14,9,15,6,2,1,1,0],
[2016,8,7,9,11,31,3,0,0,1],
[2016,7,20,9,10,10,1,0,1,1],
[2016,8,11,9,10,7,2,0,0,1],
[2016,7,20,9,11,41,2,1,1,1],
[2016,7,27,9,12,54,2,1,1,0],
[2016,8,12,9,13,6,3,1,1,1],
[2016,7,16,9,15,16,2,0,1,0],
[2016,7,30,9,11,48,1,1,0,0],
[2016,7,16,9,10,8,3,1,1,0],
[2016,8,7,9,12,7,2,0,0,0],
[2016,7,26,9,14,1,3,0,0,0],
[2016,8,24,9,14,11,2,0,1,0],
[2016,7,20,9,9,23,3,1,0,0],
[2016,7,6,9,10,10,1,0,1,0],
[2016,7,15,9,14,8,1,0,0,1],
[2016,7,31,9,15,7,2,0,0,0],
[2016,7,18,9,12,13,2,0,0,1],
[2016,7,21,9,11,10,3,0,0,0],
[2016,8,24,9,14,46,2,1,1,1],
[2016,8,19,9,11,37,3,1,0,1],
[2016,8,8,9,14,49,3,0,0,0],
[2016,8,7,9,15,13,3,1,1,1],
[2016,8,30,9,9,50,2,0,1,1],
[2016,7,5,9,13,8,2,0,0,1],
[2016,7,4,9,8,44,2,1,1,0],
[2016,7,27,9,15,49,2,0,0,0],
[2016,7,7,9,12,34,2,1,0,1],
[2016,8,20,9,15,20,2,1,0,0],
[2016,7,12,9,15,57,2,1,1,1],
[2016,7,23,9,11,7,1,1,0,0],
[2016,8,24,9,10,59,1,0,0,0],
[2016,7,25,9,12,36,1,0,0,1],
[2016,7,12,9,9,15,1,0,0,0],
[2016,8,28,9,10,21,1,1,1,0],
[2016,8,25,9,11,48,2,1,0,1],
[2016,8,23,9,9,30,1,1,1,0],
[2016,8,28,9,10,2,1,1,0,0],
[2016,7,24,9,13,24,2,0,0,1],
[2016,8,31,9,10,16,2,0,1,0],
[2016,8,21,9,14,53,1,1,0,1],
[2016,7,25,9,11,32,1,1,1,0],
[2016,8,8,9,15,5,3,1,1,1],
[2016,7,20,9,10,55,1,0,0,1],
[2016,8,22,9,10,45,2,0,0,0],
[2016,8,18,9,11,53,3,1,0,0],
[2016,8,25,9,15,45,3,1,0,1],
[2016,7,24,9,15,54,1,0,1,1],
[2016,7,6,9,13,7,2,0,0,0],
[2016,8,24,9,8,53,2,0,0,1],
[2016,7,27,9,10,29,1,1,0,0],
[2016,8,19,9,11,56,2,1,1,0],
[2016,8,19,9,9,33,3,1,1,0],
[2016,7,11,9,11,35,1,1,1,1],
[2016,8,14,9,9,24,2,0,0,1],
[2016,7,31,9,10,47,1,0,0,0],
[2016,7,9,9,14,6,3,0,1,0],
[2016,7,7,9,8,2,1,0,1,0],
[2016,7,5,9,9,27,3,1,1,0],
[2016,7,25,9,14,56,2,1,0,1],
[2016,8,29,9,14,7,2,0,0,0],
[2016,8,29,9,13,22,2,1,0,1],
[2016,7,12,9,10,3,2,1,0,0],
[2016,7,1,9,10,53,3,1,1,0],
[2016,7,3,9,11,3,2,1,1,0],
[2016,8,28,9,10,1,2,1,1,1],
[2016,7,19,9,8,12,2,0,1,0],
[2016,8,3,9,10,29,2,1,1,0],
[2016,7,3,9,10,21,2,1,0,1],
[2016,7,11,9,11,21,1,1,1,0],
[2016,8,28,9,8,48,3,0,1,1],
[2016,7,18,9,14,53,1,1,1,0],
[2016,7,28,9,10,56,2,1,1,1],
[2016,8,22,9,12,42,2,0,1,1],
[2016,7,6,9,13,46,3,1,0,0],
[2016,8,19,9,9,14,1,0,0,1],
[2016,7,14,9,10,18,1,1,0,1],
[2016,8,13,9,10,52,2,1,1,1],
[2016,8,7,9,12,4,2,0,0,1],
[2016,8,11,9,12,45,3,0,1,1],
[2016,8,20,9,12,59,2,0,1,1],
[2016,8,23,9,14,52,2,1,1,1],
[2016,7,2,9,13,6,2,0,1,0],
[2016,7,20,9,14,35,2,0,1,1],
[2016,7,8,9,10,30,1,0,1,1],
[2016,7,29,9,14,35,3,1,0,1],
[2016,8,26,9,10,6,2,1,0,0],
[2016,7,9,9,14,42,3,0,1,0],
[2016,7,11,9,10,55,3,1,1,1],
[2016,8,26,9,10,31,1,0,1,1],
[2016,7,12,9,15,12,2,1,0,0],
[2016,7,13,9,10,50,3,1,1,1],
[2016,7,9,9,14,4,2,1,1,0],
[2016,8,1,9,10,14,3,0,0,0],
[2016,8,6,9,14,34,1,0,1,0],
[2016,8,19,9,13,10,1,0,1,1],
[2016,8,17,9,14,39,1,0,1,1],
[2016,7,20,9,12,14,2,1,1,1],
[2016,8,11,9,11,20,2,0,0,1],
[2016,7,24,9,14,45,2,1,1,0],
[2016,7,2,9,10,56,3,0,1,1],
[2016,8,24,9,8,5,2,0,1,0],
[2016,7,29,9,14,42,2,0,1,1],
[2016,7,1,9,8,39,1,0,0,0],
[2016,8,18,9,12,31,3,0,1,1],
[2016,7,12,9,12,33,1,1,0,0],
[2016,7,30,9,12,1,2,1,1,0],
[2016,7,22,9,15,22,1,1,1,1],
[2016,7,12,9,8,49,1,0,1,0],
[2016,8,8,9,15,3,2,0,0,0],
[2016,7,3,9,8,3,2,0,1,0],
[2016,8,19,9,8,49,1,1,0,0],
[2016,8,5,9,14,6,1,1,0,0],
[2016,7,5,9,12,24,1,0,1,1],
[2016,8,15,9,10,34,1,1,1,1],
[2016,8,27,9,10,22,3,1,1,0],
[2016,8,11,9,15,48,3,0,0,1],
[2016,8,10,9,9,58,2,0,0,1],
[2016,7,25,9,12,50,1,0,1,0],
[2016,8,29,9,9,37,1,0,1,1],
[2016,8,12,9,14,35,3,0,1,1],
[2016,7,10,9,13,38,2,0,0,0],
[2016,7,14,9,11,23,2,0,1,1],
[2016,7,24,9,14,13,2,0,1,0],
[2016,7,12,9,10,55,3,0,0,0],
[2016,8,8,9,12,52,1,0,1,0],
[2016,8,6,9,11,7,3,0,1,0],
[2016,7,5,9,10,8,1,1,1,1],
[2016,7,2,9,9,18,3,0,1,1],
[2016,7,9,9,11,29,2,0,0,0],
[2016,8,17,9,9,49,3,1,1,1],
[2016,8,27,9,13,37,1,0,0,1],
[2016,7,25,9,9,22,3,0,0,1],
[2016,8,6,9,12,43,3,0,1,1],
[2016,7,24,9,15,39,2,1,1,0],
[2016,8,27,9,8,39,1,1,0,0],
[2016,8,6,9,12,44,2,1,0,1],
[2016,8,5,9,14,34,2,0,1,0],
[2016,8,31,9,8,53,1,0,0,0],
[2016,8,15,9,11,42,3,1,1,1],
[2016,7,15,9,14,41,3,1,1,0],
[2016,8,4,9,10,13,2,0,0,0],
[2016,8,22,9,9,12,2,0,0,1],
[2016,7,13,9,10,12,1,0,0,1],
[2016,8,6,9,11,32,1,0,0,0],
[2016,8,6,9,13,30,1,1,0,0],
[2016,7,27,9,10,51,2,0,0,1],
[2016,7,26,9,8,40,2,0,0,1],
[2016,8,4,9,11,23,1,1,1,1],
[2016,8,15,9,13,16,3,0,0,1],
[2016,8,12,9,13,4,2,0,1,0],
[2016,7,28,9,15,40,1,1,1,0],
[2016,7,19,9,10,53,2,0,1,1],
[2016,8,26,9,10,43,2,1,1,1],
[2016,8,2,9,11,59,1,0,0,0],
[2016,7,2,9,8,22,2,1,0,1],
[2016,7,24,9,9,53,2,0,1,1],
[2016,8,6,9,9,25,2,0,0,0],
[2016,8,13,9,14,28,2,1,1,0],
[2016,7,8,9,15,11,2,1,0,0],
[2016,8,21,9,9,40,3,1,1,1],
[2016,7,12,9,10,33,3,0,0,0],
[2016,7,29,9,9,7,1,0,0,0],
[2016,7,15,9,13,4,2,1,1,1],
[2016,7,14,9,14,50,2,0,1,1],
[2016,8,31,9,9,41,2,0,0,1],
[2016,7,7,9,12,51,3,0,0,0],
[2016,7,23,9,8,38,2,1,1,1],
[2016,8,24,9,13,47,3,0,1,1],
[2016,7,6,9,14,25,2,1,1,1],
[2016,8,26,9,11,30,2,1,1,0],
[2016,8,2,9,14,48,2,1,0,1],
[2016,7,24,9,9,36,3,1,0,1],
[2016,7,21,9,9,1,1,0,1,0],
[2016,7,27,9,11,53,3,1,0,0],
[2016,7,14,9,13,2,3,1,1,1],
[2016,7,27,9,14,43,2,1,0,0],
[2016,7,23,9,14,33,1,0,1,1],
[2016,8,19,9,12,2,3,0,0,0],
[2016,8,19,9,8,16,2,1,0,0],
[2016,7,10,9,14,13,3,1,0,1],
[2016,7,28,9,8,33,2,0,0,1],
[2016,7,12,9,12,28,2,1,1,0],
[2016,7,3,9,14,44,2,0,0,1],
[2016,7,15,9,11,25,2,1,0,1],
[2016,7,30,9,11,30,3,0,0,1],
[2016,8,8,9,14,49,2,1,1,1],
[2016,8,24,9,15,7,2,1,1,0],
[2016,7,22,9,12,6,2,0,0,0],
[2016,7,24,9,11,24,3,0,1,0],
[2016,8,24,9,12,6,2,1,1,1],
[2016,7,1,9,11,57,2,0,0,1],
[2016,8,22,9,15,44,3,1,0,0],
[2016,7,28,9,11,6,2,0,0,0],
[2016,8,15,9,9,45,2,1,0,1],
[2016,7,27,9,14,32,3,0,1,1],
[2016,8,9,9,14,17,1,1,1,0],
[2016,8,13,9,8,24,2,0,0,1],
[2016,8,9,9,12,8,1,0,0,1],
[2016,7,12,9,15,44,2,0,1,1],
[2016,8,4,9,8,5,2,0,0,1],
[2016,8,12,9,12,3,2,0,1,1],
[2016,8,20,9,8,45,3,0,0,1],
[2016,8,14,9,15,29,2,0,0,1],
[2016,8,5,9,9,48,2,0,0,0],
[2016,7,8,9,11,11,2,1,0,1],
[2016,7,4,9,12,43,3,0,1,1],
[2016,7,20,9,13,26,3,0,1,1],
[2016,8,4,9,12,29,2,1,0,0],
[2016,7,25,9,10,2,2,0,0,1],
[2016,8,24,9,14,4,1,1,0,0],
[2016,7,5,9,11,42,1,0,0,1],
[2016,7,3,9,10,39,3,0,1,1],
[2016,8,16,9,13,3,3,1,1,0],
[2016,7,23,9,13,48,2,1,0,0],
[2016,7,30,9,12,55,2,0,0,1],
[2016,7,5,9,10,42,2,1,0,1],
[2016,8,26,9,15,43,2,1,0,0],
[2016,8,4,5,54,19,2,1,1,1],
[2016,8,3,4,50,15,1,1,1,1],
[2016,8,31,20,37,54,1,0,1,0],
[2016,7,13,19,33,20,3,0,0,0],
[2016,8,17,6,47,33,1,0,0,1],
[2016,8,9,2,34,46,3,1,1,1],
[2016,7,8,8,11,44,3,0,0,0],
[2016,8,13,18,45,27,2,0,1,0],
[2016,8,18,18,52,11,2,1,1,0],
[2016,7,15,11,10,51,1,0,1,0],
[2016,7,8,4,46,18,2,0,0,1],
[2016,8,5,9,2,22,1,1,0,1],
[2016,8,27,7,35,4,2,0,0,0],
[2016,8,3,20,46,56,3,1,1,0],
[2016,7,13,11,11,22,2,0,1,1],
[2016,8,25,9,22,10,1,0,1,1],
[2016,7,22,9,15,39,3,1,1,0],
[2016,7,25,9,15,37,2,1,0,1],
[2016,7,9,9,11,11,2,1,0,1],
[2016,7,13,9,11,24,2,0,1,0],
[2016,7,20,9,11,57,2,0,1,1],
[2016,7,16,9,9,18,2,1,1,0],
[2016,7,18,9,14,41,2,0,0,0],
[2016,7,8,9,10,27,1,0,1,0],
[2016,8,27,9,11,35,2,0,1,0],
[2016,7,2,9,8,13,2,1,0,1],
[2016,7,21,9,8,41,3,0,0,1],
[2016,8,12,9,13,43,2,0,0,1],
[2016,7,20,9,12,42,2,0,1,0],
[2016,7,11,9,8,44,3,1,0,1],
[2016,8,10,9,9,29,2,0,0,0],
[2016,7,17,9,10,57,2,1,0,1],
[2016,7,18,9,9,31,1,1,1,1],
[2016,8,30,9,8,56,2,1,0,0],
[2016,7,14,9,10,19,2,0,1,0],
[2016,8,15,9,12,22,2,1,1,0],
[2016,8,13,9,9,33,1,1,0,1],
[2016,8,10,9,12,33,2,0,1,1],
[2016,7,23,9,12,44,1,0,1,0],
[2016,7,7,9,13,36,1,1,0,1],
[2016,8,3,9,12,52,2,0,1,0],
[2016,8,23,9,9,59,2,0,1,1],
[2016,7,24,9,8,11,3,0,1,1],
[2016,8,3,9,9,3,2,1,0,0],
[2016,8,4,9,14,1,1,1,0,1],
[2016,8,26,9,13,50,2,0,0,1],
[2016,8,5,9,10,22,2,0,0,0],
[2016,8,22,9,10,44,2,0,0,1],
[2016,8,15,9,14,20,3,1,0,0],
[2016,7,25,9,11,56,2,0,0,0],
[2016,8,9,9,9,1,3,0,1,1],
[2016,7,6,9,13,58,3,1,0,0],
[2016,7,22,9,15,42,2,1,1,0],
[2016,8,16,9,15,18,3,1,0,1],
[2016,8,24,9,12,15,2,0,1,0],
[2016,7,27,9,10,1,2,0,0,0],
[2016,8,1,9,11,8,2,1,0,1],
[2016,7,10,9,9,6,3,0,1,1],
[2016,7,19,9,8,41,2,1,1,1],
[2016,7,2,9,13,33,2,0,1,1],
[2016,7,24,9,12,35,2,0,0,0],
[2016,7,6,9,13,30,1,0,0,1],
[2016,7,3,9,15,23,2,1,1,1],
[2016,8,17,9,8,8,2,0,0,0],
[2016,7,13,9,12,6,1,1,1,1],
[2016,8,14,9,11,6,2,1,0,0],
[2016,8,9,9,9,48,3,1,0,0],
[2016,7,22,9,11,10,1,1,1,0],
[2016,8,27,9,10,59,3,1,0,0],
[2016,7,2,9,11,46,1,0,1,0],
[2016,7,8,9,15,10,2,0,0,0],
[2016,8,27,9,13,45,2,1,1,0],
[2016,8,18,9,12,19,1,0,0,1],
[2016,8,12,9,8,17,2,0,0,0],
[2016,7,9,9,13,31,3,1,1,1],
[2016,7,11,9,9,39,1,0,1,0],
[2016,7,29,9,14,36,2,1,1,0],
[2016,7,3,9,9,44,2,0,1,0],
[2016,7,12,9,9,59,3,1,1,1],
[2016,8,27,9,9,54,2,0,0,1],
[2016,7,2,9,9,41,2,0,1,1],
[2016,8,9,9,12,28,2,0,0,0],
[2016,8,13,9,13,48,3,0,0,0],
[2016,7,7,9,11,29,2,1,0,0],
[2016,7,25,9,12,11,2,1,1,0],
[2016,8,14,9,8,56,2,0,0,1],
[2016,8,25,9,11,52,2,0,0,1],
[2016,7,9,9,10,38,3,1,1,1],
[2016,8,1,9,14,11,2,1,0,0],
[2016,7,6,9,15,18,3,1,1,0],
[2016,7,31,9,13,12,2,0,1,1],
[2016,7,15,9,13,50,2,0,1,1],
[2016,7,30,9,11,38,2,0,1,1],
[2016,7,9,9,13,32,3,1,1,1],
[2016,8,12,9,12,48,1,0,1,1],
[2016,7,19,13,50,15,1,0,1,1],
[2016,7,4,21,47,12,3,1,0,0],
[2016,8,15,13,46,43,3,1,0,0],
[2016,8,11,4,3,22,1,0,0,0],
[2016,7,27,18,22,8,1,1,0,0],
[2016,8,27,13,42,54,2,1,1,1],
[2016,7,25,6,31,16,1,0,1,1],
[2016,7,22,2,24,1,2,0,1,0],
[2016,8,5,10,35,44,2,0,1,1],
[2016,7,7,16,51,43,2,0,0,1],
[2016,7,22,1,58,22,2,0,1,0],
[2016,7,18,17,17,56,2,0,1,1],
[2016,8,27,18,35,19,2,1,0,1],
[2016,7,17,15,51,44,2,0,1,0],
[2016,7,15,15,16,50,1,1,1,0],
[2016,7,26,6,43,11,1,0,1,1],
[2016,7,15,9,23,56,2,0,0,0],
[2016,8,15,19,21,7,3,1,1,0],
[2016,8,19,13,9,5,2,1,1,1],
[2016,8,4,4,43,19,2,0,1,0],
[2016,8,21,21,56,55,3,1,0,1],
[2016,8,3,22,11,48,3,0,0,1],
[2016,8,3,7,24,24,2,1,0,1],
[2016,7,28,7,9,45,2,1,0,0],
[2016,7,18,21,16,38,3,1,1,1],
[2016,8,3,3,14,4,2,0,1,1],
[2016,7,28,19,32,35,1,0,0,0],
[2016,8,16,2,49,54,1,1,0,0],
[2016,7,18,3,39,4,2,1,0,0],
[2016,7,26,10,12,27,1,1,0,1],
[2016,8,15,22,10,44,2,0,0,1],
[2016,7,11,14,48,21,2,1,0,1],
[2016,7,15,14,33,58,2,0,0,0],
[2016,7,7,3,44,22,2,1,0,0],
[2016,7,9,7,43,56,3,0,1,1],
[2016,7,1,22,25,9,3,0,1,1],
[2016,8,25,3,47,51,2,0,0,0],
[2016,8,13,6,42,28,2,0,0,1],
[2016,7,1,21,22,39,3,0,1,0],
[2016,7,9,11,46,47,3,0,1,1],
[2016,8,20,17,50,34,1,1,1,1],
[2016,8,16,1,21,58,1,1,1,0],
[2016,8,27,2,18,3,1,1,0,1],
[2016,7,1,16,15,46,1,1,1,0],
[2016,8,25,9,14,16,1,1,1,0],
[2016,8,28,9,14,53,3,0,1,0],
[2016,8,2,9,11,5,1,0,0,1],
[2016,8,2,9,9,12,3,1,1,0],
[2016,7,11,9,13,51,1,1,1,0],
[2016,8,27,9,13,2,3,1,1,0],
[2016,7,28,9,13,50,2,1,0,1],
[2016,8,7,9,14,5,2,1,1,1],
[2016,7,28,9,15,37,2,1,0,0],
[2016,8,9,9,13,54,2,1,1,0],
[2016,7,25,9,15,6,2,0,0,0],
[2016,8,2,9,13,24,2,0,0,0],
[2016,7,8,9,14,25,2,1,1,1],
[2016,7,23,9,9,18,3,1,1,1],
[2016,8,25,9,13,23,2,0,0,1],
[2016,8,14,9,14,30,2,0,0,1],
[2016,7,30,9,14,43,1,0,0,1],
[2016,7,3,9,12,4,1,1,1,1],
[2016,7,4,9,12,22,2,0,0,1],
[2016,8,28,9,11,55,2,1,0,1],
[2016,8,16,9,14,15,1,1,1,0],
[2016,8,29,9,11,7,3,1,0,1],
[2016,8,23,9,13,46,3,0,0,0],
[2016,7,19,9,10,44,2,1,1,0],
[2016,8,18,9,11,55,3,0,1,0],
[2016,8,4,9,9,1,1,0,1,1],
[2016,8,23,9,14,39,2,0,0,1],
[2016,7,6,9,9,37,3,1,0,1],
[2016,8,27,9,12,53,2,1,1,0],
[2016,7,4,9,13,41,2,0,0,0],
[2016,8,23,9,9,24,1,0,1,0],
[2016,7,26,9,15,29,2,1,0,1],
[2016,7,22,9,12,47,1,1,0,1],
[2016,7,13,9,12,35,1,1,1,1],
[2016,8,11,9,11,19,3,0,0,0],
[2016,7,30,9,14,34,2,0,0,0],
[2016,8,22,9,11,56,1,1,0,1],
[2016,7,4,9,10,48,3,1,1,1],
[2016,8,17,9,15,46,2,1,0,0],
[2016,8,14,9,14,40,2,1,1,0],
[2016,7,21,9,10,13,3,1,1,1],
[2016,7,31,9,8,9,3,0,0,0],
[2016,7,2,9,12,56,2,1,1,1],
[2016,7,7,9,14,5,2,1,0,0],
[2016,7,8,9,11,55,2,1,0,1],
[2016,7,8,9,14,50,1,0,0,0],
[2016,7,27,9,12,46,2,0,0,1],
[2016,8,8,9,11,9,2,0,1,0],
[2016,8,17,9,11,28,3,1,0,1],
[2016,7,11,9,12,26,3,1,1,1],
[2016,7,13,9,10,47,2,0,1,1],
[2016,8,10,9,8,7,1,1,0,1],
[2016,8,9,9,10,24,1,0,1,1],
[2016,7,30,9,13,38,1,0,1,0],
[2016,7,12,9,9,10,2,1,1,1],
[2016,8,6,9,12,21,2,1,1,1],
[2016,7,29,9,11,25,3,1,0,1],
[2016,7,13,9,10,20,2,1,1,0],
[2016,8,19,9,14,57,2,0,0,0],
[2016,8,16,9,9,42,1,1,1,1],
[2016,7,22,9,12,57,2,1,1,1],
[2016,7,14,9,11,33,3,1,0,1],
[2016,8,10,9,11,7,2,1,0,1],
[2016,8,30,9,14,34,1,0,1,1],
[2016,7,16,9,8,29,2,1,1,0],
[2016,8,13,9,9,44,2,0,1,1],
[2016,8,4,9,13,23,2,0,0,1],
[2016,7,22,9,15,9,2,1,0,1],
[2016,8,27,9,14,20,3,1,1,1],
[2016,7,9,9,12,54,2,1,0,0],
[2016,8,21,9,8,1,3,0,0,0],
[2016,7,5,9,13,37,3,1,0,0],
[2016,7,13,9,8,1,3,1,0,0],
[2016,7,26,9,15,33,2,0,1,0],
[2016,8,14,9,11,56,2,0,1,1],
[2016,8,24,9,11,37,2,0,1,0],
[2016,7,10,9,10,12,2,1,1,1],
[2016,8,29,9,11,38,2,0,0,0],
[2016,8,4,9,14,8,2,0,0,0],
[2016,7,29,12,41,4,2,0,0,1],
[2016,7,12,21,19,53,3,0,1,1],
[2016,8,18,9,28,56,1,0,0,0],
[2016,8,28,8,22,6,1,0,0,0],
[2016,8,24,4,7,44,2,0,0,0],
[2016,7,5,10,17,11,2,1,1,0],
[2016,7,28,19,37,21,1,0,1,0],
[2016,8,19,9,9,41,2,0,1,0],
[2016,7,29,9,12,6,2,1,1,1],
[2016,7,20,9,11,43,2,0,0,0],
[2016,7,20,9,11,53,3,0,1,1],
[2016,8,29,9,9,58,2,1,0,0],
[2016,8,30,9,14,55,1,0,1,1],
[2016,8,24,9,10,34,2,1,1,0],
[2016,7,13,9,11,22,3,1,1,1],
[2016,8,21,9,14,32,2,0,0,1],
[2016,8,3,9,8,12,3,0,0,1],
[2016,7,17,9,15,37,2,0,1,1],
[2016,8,18,9,11,45,1,0,1,0],
[2016,7,10,9,8,42,1,0,1,1],
[2016,8,20,9,15,31,2,1,1,0],
[2016,7,26,9,10,47,2,1,0,0],
[2016,7,15,9,15,28,3,0,0,1],
[2016,8,19,9,11,36,2,0,0,0],
[2016,7,21,9,13,39,3,1,1,1],
[2016,7,13,9,13,54,2,0,1,0],
[2016,7,13,9,10,10,2,1,1,0],
[2016,8,30,9,10,5,2,1,1,1],
[2016,8,1,9,11,43,2,1,1,0],
[2016,8,18,9,11,59,3,0,1,0],
[2016,7,28,9,11,40,3,1,1,0],
[2016,8,8,9,9,35,2,0,1,1],
[2016,7,8,9,15,27,3,0,0,0],
[2016,7,25,9,14,56,1,0,1,1],
[2016,8,17,9,11,23,2,1,1,0],
[2016,7,27,9,11,50,1,0,1,1],
[2016,7,6,9,10,54,2,1,0,1],
[2016,7,15,9,13,13,2,1,1,1],
[2016,8,6,9,12,14,2,0,1,0],
[2016,7,11,9,9,35,2,1,0,0],
[2016,7,2,9,13,23,2,1,1,1],
[2016,8,24,9,13,21,2,0,1,0],
[2016,7,20,9,9,42,2,0,1,1],
[2016,7,16,9,8,8,2,0,0,1],
[2016,7,25,9,9,11,2,1,1,0],
[2016,8,9,9,9,34,2,1,0,0],
[2016,7,10,9,11,7,1,0,0,1],
[2016,7,17,9,14,49,2,0,0,1],
[2016,8,17,9,11,2,1,0,1,0],
[2016,7,8,9,14,37,1,0,1,0],
[2016,8,10,9,10,55,2,0,1,0],
[2016,8,12,9,9,59,1,0,1,0],
[2016,7,29,9,15,21,3,0,1,0],
[2016,8,8,9,9,4,2,1,1,0],
[2016,7,18,9,14,19,3,1,0,1],
[2016,7,6,9,12,49,2,1,1,0],
[2016,7,7,9,9,5,2,0,1,0],
[2016,8,22,9,11,27,2,1,0,0],
[2016,7,9,9,14,25,2,0,1,0],
[2016,7,16,9,9,59,1,0,1,1],
[2016,8,9,9,10,40,2,1,1,1],
[2016,7,25,9,11,8,2,1,0,0],
[2016,8,14,9,11,9,3,1,1,1],
[2016,7,28,9,8,45,1,1,1,0],
[2016,7,4,9,12,10,2,0,1,0],
[2016,8,24,9,9,18,1,1,0,0],
[2016,8,6,9,14,8,3,1,1,1],
[2016,7,17,9,12,31,2,1,0,1],
[2016,7,19,9,9,38,3,0,0,0],
[2016,8,24,9,12,34,1,1,0,0],
[2016,8,5,9,13,52,2,0,0,1],
[2016,7,5,9,12,17,2,0,1,1],
[2016,8,9,9,13,7,2,0,1,1],
[2016,7,16,9,13,25,3,1,0,0],
[2016,7,12,9,12,38,1,1,1,1],
[2016,7,30,9,9,20,2,1,0,1],
[2016,7,25,9,12,29,1,1,1,1],
[2016,7,10,9,11,7,2,1,0,0],
[2016,8,30,9,12,27,2,1,1,0],
[2016,8,15,9,14,6,3,1,1,0],
[2016,8,1,9,13,25,3,1,1,1],
[2016,7,9,9,10,22,1,0,1,1],
[2016,8,1,9,14,46,1,1,1,0],
[2016,7,19,9,14,24,3,1,0,1],
[2016,8,18,9,11,11,3,1,0,1],
[2016,7,22,9,9,37,1,1,1,0],
[2016,8,3,11,6,26,3,1,1,0],
[2016,8,13,13,27,13,3,0,0,1],
[2016,7,17,14,38,0,2,1,0,1],
[2016,8,12,22,26,50,1,0,0,1],
[2016,8,17,15,11,11,1,0,0,0],
[2016,8,25,14,46,5,3,1,1,0],
[2016,7,20,12,8,58,3,1,0,0],
[2016,8,8,19,11,58,2,1,1,0],
[2016,7,14,5,14,13,2,1,1,0],
[2016,8,3,1,22,21,2,1,0,0],
[2016,8,8,11,11,39,2,0,1,0],
[2016,8,26,8,6,6,1,1,0,1],
[2016,8,18,9,8,23,2,0,0,0],
[2016,7,6,9,15,48,2,1,1,1],
[2016,7,3,9,11,52,2,0,0,1],
[2016,8,12,9,10,17,3,0,1,0],
[2016,8,8,9,10,27,2,0,1,1],
[2016,8,1,9,12,20,2,0,1,0],
[2016,7,14,9,12,9,2,1,0,1],
[2016,7,16,9,11,46,2,1,1,0],
[2016,8,27,9,9,15,2,1,0,1],
[2016,8,21,9,8,44,3,1,1,0],
[2016,8,9,9,14,49,2,0,0,0],
[2016,8,21,9,15,3,2,0,0,0],
[2016,8,25,9,8,15,1,0,0,0],
[2016,8,17,9,12,1,3,0,1,0],
[2016,8,6,9,8,48,3,1,0,0],
[2016,8,2,9,15,11,1,1,1,0],
[2016,8,26,9,9,50,3,1,1,0],
[2016,8,17,9,11,14,2,1,0,0],
[2016,8,18,9,14,56,1,1,0,1],
[2016,7,5,9,13,54,3,1,1,0],
[2016,7,3,9,9,35,2,1,1,1],
[2016,7,15,9,8,35,3,0,0,0],
[2016,7,6,9,11,34,2,1,0,1],
[2016,8,14,9,9,22,2,0,0,0],
[2016,7,31,9,10,27,2,0,0,0],
[2016,7,18,9,13,40,2,1,0,1],
[2016,8,29,9,9,59,2,1,1,0],
[2016,7,19,9,13,47,3,0,0,0],
[2016,8,29,9,12,4,2,1,0,0],
[2016,8,7,9,9,26,1,1,0,1],
[2016,7,7,9,10,37,2,0,1,1],
[2016,8,31,9,15,53,3,1,0,0],
[2016,8,13,9,10,39,1,1,0,1],
[2016,7,16,9,9,55,2,1,0,1],
[2016,8,2,9,8,23,1,1,1,0],
[2016,8,12,9,11,41,1,1,0,0],
[2016,8,14,9,11,14,2,0,0,0],
[2016,8,3,9,9,55,3,1,0,0],
[2016,8,5,9,8,6,1,0,0,1],
[2016,8,8,9,9,32,3,0,1,1],
[2016,8,1,9,13,59,1,1,1,1],
[2016,8,19,9,10,26,2,1,1,1],
[2016,8,30,9,14,47,2,1,0,1],
[2016,8,18,9,9,24,1,0,1,0],
[2016,7,5,9,14,18,2,0,1,1],
[2016,7,21,9,9,13,2,0,0,0],
[2016,8,18,9,10,36,2,1,1,0],
[2016,8,20,9,13,56,2,1,1,0],
[2016,7,11,9,11,20,2,0,0,1],
[2016,8,10,9,14,22,3,1,1,0],
[2016,8,23,9,14,57,3,1,0,0],
[2016,8,28,9,13,43,2,1,0,0],
[2016,8,16,9,12,49,2,0,0,0],
[2016,8,8,9,8,50,1,1,1,1],
[2016,8,9,9,12,26,1,1,1,1],
[2016,8,28,9,11,15,1,1,0,1],
[2016,7,12,9,15,16,1,1,0,1],
[2016,8,7,9,11,30,2,1,0,1],
[2016,7,16,9,15,43,2,0,0,0],
[2016,7,19,9,11,13,2,1,1,1],
[2016,7,6,9,10,7,2,0,1,1],
[2016,8,2,9,15,37,3,1,1,1],
[2016,7,9,9,10,56,2,0,1,0],
[2016,8,23,9,10,41,1,0,0,1],
[2016,8,5,9,14,3,2,0,0,0],
[2016,7,26,9,11,20,3,1,1,0],
[2016,7,15,9,14,50,1,0,0,1],
[2016,8,25,9,15,28,2,1,0,0],
[2016,7,25,9,11,42,3,0,1,1],
[2016,7,1,9,11,48,2,0,0,1],
[2016,7,1,9,15,7,2,1,1,0],
[2016,7,1,9,14,26,3,1,1,0],
[2016,7,22,9,14,4,3,0,1,1],
[2016,8,19,9,14,57,2,0,1,0],
[2016,8,7,9,8,23,2,1,1,1],
[2016,7,5,9,12,46,2,0,0,0],
[2016,8,23,9,11,3,2,0,1,1],
[2016,7,4,9,13,35,2,1,1,0],
[2016,7,20,9,10,59,1,0,0,0],
[2016,7,3,15,43,40,1,0,0,0],
[2016,7,6,17,39,59,2,0,1,0],
[2016,7,19,4,11,5,3,0,0,1],
[2016,8,25,22,41,38,3,0,0,1],
[2016,8,15,15,51,33,2,0,0,0],
[2016,7,17,23,11,54,2,1,0,0],
[2016,7,22,10,10,8,1,0,1,0],
[2016,7,26,2,2,12,2,1,0,1],
[2016,8,16,21,53,41,2,1,0,0],
[2016,8,7,13,55,29,3,1,0,0],
[2016,8,17,2,56,45,3,1,0,1],
[2016,8,23,2,44,43,3,0,1,0],
[2016,7,24,20,1,12,1,0,1,1],
[2016,7,26,9,9,33,3,1,1,1],
[2016,8,18,9,12,46,2,0,1,1],
[2016,8,25,9,15,30,2,0,1,0],
[2016,7,12,9,12,6,3,0,1,1],
[2016,7,10,9,14,40,3,1,1,0],
[2016,8,26,9,11,2,3,0,1,0],
[2016,8,3,9,11,3,3,0,0,0],
[2016,7,22,9,10,30,2,1,1,1],
[2016,8,4,9,14,2,3,0,0,0],
[2016,7,24,9,11,42,3,1,1,0],
[2016,8,18,9,11,10,3,1,1,1],
[2016,7,5,9,12,36,3,0,0,0],
[2016,8,5,9,9,18,3,1,0,0],
[2016,7,17,9,11,55,1,1,1,0],
[2016,7,5,9,14,32,2,1,1,0],
[2016,8,14,9,13,5,2,1,0,1],
[2016,8,21,9,13,50,3,1,1,1],
[2016,8,18,9,11,12,3,1,1,1],
[2016,7,27,9,12,12,2,0,1,1],
[2016,8,9,9,14,15,1,0,0,0],
[2016,8,5,9,12,43,2,1,1,1],
[2016,8,30,9,8,22,3,0,0,1],
[2016,7,5,9,10,47,2,1,1,1],
[2016,8,19,9,10,36,2,1,1,1],
[2016,7,22,9,13,11,2,0,1,0],
[2016,8,1,9,12,26,2,0,1,1],
[2016,7,12,9,15,17,3,0,1,0],
[2016,7,10,9,12,58,2,1,1,0],
[2016,7,19,9,13,49,1,0,0,0],
[2016,7,14,9,9,52,2,1,0,0],
[2016,7,28,9,9,51,2,1,1,1],
[2016,7,30,9,9,13,3,1,1,0],
[2016,8,13,9,11,42,3,0,1,0],
[2016,8,11,9,9,48,2,0,1,1],
[2016,8,13,9,10,20,3,0,1,0],
[2016,7,12,9,12,34,2,0,1,1],
[2016,7,14,9,11,35,2,1,1,0],
[2016,7,20,9,12,34,3,1,1,1],
[2016,7,25,9,13,36,3,1,1,0],
[2016,7,21,9,10,35,2,1,1,1],
[2016,7,26,9,11,9,2,0,0,1],
[2016,8,28,9,9,25,2,1,0,0],
[2016,8,4,9,9,16,2,0,1,1],
[2016,8,19,9,12,52,1,1,1,0],
[2016,8,28,9,8,40,2,1,1,0],
[2016,8,24,9,12,2,3,1,0,0],
[2016,8,15,9,12,45,2,0,1,1],
[2016,8,29,9,11,53,1,1,0,1],
[2016,8,23,9,14,10,2,0,0,0],
[2016,8,24,9,14,12,1,0,1,0],
[2016,7,3,9,11,26,2,1,0,0],
[2016,7,24,9,13,17,3,0,1,1],
[2016,8,2,9,10,48,1,0,1,1],
[2016,8,23,9,12,51,2,0,1,1],
[2016,8,4,9,9,20,1,1,0,0],
[2016,8,12,9,11,42,2,0,1,0],
[2016,7,8,9,10,31,3,0,0,1],
[2016,8,21,9,13,20,2,0,1,0],
[2016,8,4,9,8,24,2,1,0,1],
[2016,7,29,9,12,1,3,1,0,1],
[2016,8,8,9,14,53,3,1,1,0],
[2016,7,30,9,8,30,2,0,1,1],
[2016,8,13,9,8,34,2,1,0,0],
[2016,8,11,9,10,41,2,0,1,1],
[2016,7,7,9,9,31,3,1,0,1],
[2016,7,16,9,8,39,2,0,1,0],
[2016,7,6,9,9,20,3,0,1,0],
[2016,7,24,9,10,49,3,0,0,1],
[2016,8,19,9,8,49,1,0,0,0],
[2016,8,23,9,8,2,2,1,0,0],
[2016,8,15,9,11,26,3,0,1,1],
[2016,7,16,9,14,3,2,1,0,0],
[2016,7,10,9,14,49,1,0,1,0],
[2016,7,16,9,12,23,2,1,0,1],
[2016,8,11,9,12,8,2,0,1,1],
[2016,7,25,9,12,54,3,1,0,0],
[2016,7,17,9,13,43,3,1,1,0],
[2016,7,2,9,11,58,1,0,1,1],
[2016,8,13,9,14,16,3,1,0,0],
[2016,8,25,3,17,3,3,0,0,1],
[2016,7,15,15,16,42,1,1,0,1],
[2016,8,20,13,1,51,1,0,1,0],
[2016,7,13,14,52,58,2,0,0,0],
[2016,8,13,2,7,31,3,0,1,1],
[2016,7,22,9,30,54,2,1,0,0],
[2016,7,28,8,56,57,3,1,0,0],
[2016,8,16,16,45,49,2,1,0,0],
[2016,8,15,1,52,52,2,1,1,0],
[2016,7,21,12,43,23,3,0,0,0],
[2016,7,28,5,55,11,1,0,1,0],
[2016,8,26,18,20,21,3,1,1,1],
[2016,8,13,9,14,10,2,1,0,1],
[2016,8,16,9,11,30,3,1,0,0],
[2016,8,9,9,12,47,2,1,1,1],
[2016,7,8,9,11,45,2,1,0,1],
[2016,8,2,9,14,12,3,0,0,0],
[2016,7,20,9,15,37,2,0,1,0],
[2016,7,4,9,12,44,2,1,1,1],
[2016,7,29,9,9,59,1,0,1,1],
[2016,8,30,9,14,19,2,0,1,1],
[2016,7,16,9,14,24,2,1,1,0],
[2016,8,17,9,9,20,2,0,1,0],
[2016,7,6,9,9,32,3,0,1,0],
[2016,7,13,9,11,17,2,1,1,0],
[2016,7,11,9,13,2,1,1,1,0],
[2016,8,17,9,11,7,1,0,0,0],
[2016,7,13,9,11,35,3,1,1,0],
[2016,7,13,9,9,45,2,1,0,0],
[2016,8,28,9,14,8,2,0,0,0],
[2016,7,13,9,13,25,1,0,0,0],
[2016,7,18,9,9,21,2,1,1,0],
[2016,7,4,9,10,9,2,0,1,1],
[2016,7,28,9,15,53,3,1,1,0],
[2016,8,6,9,10,51,1,1,0,0],
[2016,8,29,9,10,41,1,1,0,0],
[2016,7,6,9,8,11,3,1,1,1],
[2016,8,26,9,12,48,3,0,0,0],
[2016,7,4,9,12,18,2,1,0,1],
[2016,8,10,9,13,2,2,1,0,1],
[2016,8,22,9,9,53,3,1,1,1],
[2016,8,19,9,14,20,3,1,0,0],
[2016,8,3,9,12,58,1,0,1,1],
[2016,7,12,9,10,1,1,0,0,0],
[2016,7,14,9,12,25,2,1,0,0],
[2016,7,11,9,8,33,2,0,0,1],
[2016,7,29,9,15,55,2,1,1,0],
[2016,7,14,9,13,0,1,0,1,0],
[2016,7,25,9,13,32,1,0,0,0],
[2016,8,8,9,14,19,1,0,1,0],
[2016,7,9,9,11,37,2,0,1,1],
[2016,7,26,9,15,3,2,0,1,1],
[2016,8,14,9,12,20,3,0,1,0],
[2016,8,26,9,14,53,3,1,0,0],
[2016,7,13,9,12,17,2,0,0,1],
[2016,8,13,9,9,41,2,0,0,0],
[2016,8,20,9,12,17,2,1,1,1],
[2016,8,9,9,9,30,1,1,0,1],
[2016,8,14,9,14,2,1,1,1,0],
[2016,8,15,9,11,48,2,1,0,1],
[2016,7,2,9,9,23,1,0,0,0],
[2016,8,24,9,14,7,2,0,0,1],
[2016,7,27,9,9,36,1,0,0,1],
[2016,7,4,9,9,16,1,0,1,1],
[2016,8,29,9,9,17,3,1,0,0],
[2016,8,18,9,12,30,2,0,1,1],
[2016,7,9,9,10,21,1,1,1,0],
[2016,7,7,9,12,54,1,0,0,0],
[2016,7,8,9,12,23,1,0,0,1],
[2016,7,20,9,13,32,2,0,0,1],
[2016,7,5,9,9,3,3,1,1,1],
[2016,7,11,9,11,56,3,0,1,1],
[2016,8,31,9,12,7,1,0,0,1],
[2016,7,17,9,12,21,1,0,1,1],
[2016,8,2,9,10,43,2,0,1,1],
[2016,8,19,9,8,39,3,0,1,1],
[2016,7,1,9,13,31,3,1,0,0],
[2016,7,7,9,11,33,2,0,0,1],
[2016,7,3,9,12,2,1,1,0,0],
[2016,8,28,9,12,50,3,0,0,1],
[2016,8,4,9,9,22,2,0,1,1],
[2016,7,26,9,15,53,3,0,1,0],
[2016,8,8,9,9,42,1,0,1,1],
[2016,7,7,9,14,58,2,1,1,0],
[2016,8,18,9,12,7,2,0,1,1],
[2016,8,20,9,9,54,1,0,0,1],
[2016,7,27,9,10,32,1,0,0,0],
[2016,8,4,9,15,22,3,1,1,0],
[2016,8,7,9,14,37,3,0,0,0],
[2016,7,27,9,13,19,3,0,0,0],
[2016,7,18,9,12,4,3,1,0,1],
[2016,7,22,11,45,19,3,0,0,1],
[2016,7,2,7,31,33,2,0,1,1],
[2016,8,5,14,42,38,2,0,0,1],
[2016,7,26,7,39,15,1,0,0,1],
[2016,8,7,5,51,15,3,1,0,0],
[2016,8,12,8,27,35,3,1,1,0],
[2016,8,12,9,43,53,1,0,1,0],
[2016,7,20,12,51,29,3,0,0,1],
[2016,7,20,21,5,46,2,1,1,0],
[2016,8,21,8,49,18,2,0,0,1],
[2016,8,2,22,38,14,2,0,1,1],
[2016,8,29,13,3,47,2,1,1,1],
[2016,8,4,17,53,49,3,0,0,1],
[2016,8,20,17,45,36,2,1,0,1],
[2016,8,14,23,31,34,2,0,1,0],
[2016,8,2,21,34,4,1,0,1,1],
[2016,7,2,19,44,15,1,1,1,1],
[2016,7,24,13,58,57,1,0,1,0],
[2016,7,14,6,58,21,2,0,1,1],
[2016,7,8,1,6,13,1,1,1,1],
[2016,7,8,16,54,0,2,1,0,1],
[2016,7,15,9,36,12,1,0,0,1],
[2016,8,14,2,58,32,2,0,0,0],
[2016,8,6,15,28,18,3,1,0,1],
[2016,7,17,4,40,3,3,0,0,0],
[2016,7,23,11,39,37,2,0,1,1],
[2016,7,25,9,30,25,1,1,1,0],
[2016,7,12,15,10,41,2,1,0,0],
[2016,7,17,15,47,32,2,0,1,1],
[2016,7,17,20,20,52,2,1,0,0],
[2016,8,13,21,22,8,2,1,0,1],
[2016,8,11,3,38,38,1,1,1,1],
[2016,7,13,17,22,36,1,0,1,1],
[2016,8,4,4,22,45,1,0,1,0],
[2016,7,22,4,6,51,2,1,1,0],
[2016,8,6,16,13,0,2,0,0,1],
[2016,8,16,11,9,10,2,0,0,0],
[2016,7,19,23,29,15,2,1,1,0],
[2016,8,27,2,16,26,2,1,1,1],
[2016,8,30,13,2,37,1,1,0,0],
[2016,7,20,19,5,14,2,0,1,0],
[2016,7,5,1,26,18,2,0,1,0],
[2016,8,10,9,16,58,2,0,1,0],
[2016,7,6,23,47,39,3,1,1,1],
[2016,8,25,1,26,5,1,1,0,1],
[2016,8,15,7,42,54,3,1,0,0],
[2016,8,30,21,19,41,1,1,0,0],
[2016,8,2,15,48,4,3,0,1,0],
[2016,8,26,1,10,13,1,1,1,0],
[2016,8,13,12,23,39,2,0,1,0],
[2016,7,9,20,3,24,2,1,0,0],
[2016,8,17,3,44,35,3,0,1,1],
[2016,8,28,6,24,8,2,0,1,0],
[2016,8,7,9,51,31,2,1,1,1],
[2016,7,5,3,36,19,2,0,1,1],
[2016,8,24,20,54,2,2,0,0,0],
[2016,8,7,18,41,46,2,1,1,0],
[2016,8,28,1,50,3,1,0,0,0],
[2016,7,5,17,23,11,1,1,0,1],
[2016,7,29,1,43,13,2,1,0,0],
[2016,7,9,22,52,37,3,1,1,1],
[2016,8,16,7,26,59,2,0,1,0],
[2016,8,21,17,14,14,3,0,0,0],
[2016,8,8,13,41,58,2,1,1,0],
[2016,8,27,21,32,1,1,0,1,0],
[2016,8,11,11,30,7,1,0,0,1],
[2016,8,12,11,11,41,3,1,0,1],
[2016,7,4,23,46,39,3,0,1,0],
[2016,7,22,22,11,50,2,1,0,1],
[2016,7,28,5,51,47,2,0,0,0],
[2016,7,10,9,4,20,3,1,0,0],
[2016,8,8,5,37,46,2,1,1,1],
[2016,7,31,17,46,55,1,0,0,0],
[2016,7,11,8,16,56,3,1,0,0],
[2016,8,3,6,21,27,2,0,1,0],
[2016,8,13,15,44,6,2,0,0,0],
[2016,8,25,0,57,5,2,1,0,1],
[2016,7,6,1,16,21,3,1,1,1],
[2016,7,8,22,36,48,2,0,0,0],
[2016,8,31,5,28,22,2,0,1,1],
[2016,8,23,0,45,38,1,0,0,0],
[2016,8,8,1,10,55,1,1,1,0],
[2016,8,25,16,8,26,2,0,1,0],
[2016,7,27,22,55,26,1,0,1,1],
[2016,8,21,6,58,33,2,1,1,1],
[2016,8,10,2,56,20,2,1,0,0],
[2016,8,29,10,49,20,2,1,0,1],
[2016,8,31,0,32,21,2,0,0,0],
[2016,7,3,2,3,27,1,1,1,0],
[2016,8,7,20,15,49,2,0,0,1],
[2016,7,20,1,15,10,2,0,0,1],
[2016,7,30,16,51,19,2,1,0,0],
[2016,8,10,6,30,29,3,1,1,1],
[2016,8,24,15,12,40,3,0,0,1],
[2016,8,14,17,24,1,2,1,1,1],
[2016,7,22,21,24,32,2,0,1,0],
[2016,8,15,9,8,19,2,1,1,0],
[2016,7,15,9,8,41,1,1,1,1],
[2016,8,21,9,8,10,3,0,1,0],
[2016,7,7,9,14,30,1,0,1,1],
[2016,7,30,9,13,3,2,0,0,1],
[2016,8,28,9,10,9,3,1,1,1],
[2016,8,8,9,10,43,2,0,0,0],
[2016,8,30,9,11,41,2,1,0,0],
[2016,8,26,9,12,38,2,1,1,0],
[2016,8,27,9,13,12,2,0,0,1],
[2016,8,28,9,12,32,1,0,0,0],
[2016,8,18,9,14,48,1,0,0,0],
[2016,8,7,9,14,5,1,1,1,0],
[2016,8,14,9,12,3,1,1,0,0],
[2016,7,12,9,12,6,1,0,1,0],
[2016,7,6,9,13,6,1,0,0,0],
[2016,8,2,9,14,47,3,0,0,1],
[2016,8,7,9,10,33,2,0,1,0],
[2016,7,5,9,9,59,3,0,0,1],
[2016,7,23,9,14,53,3,1,1,1],
[2016,7,10,9,12,29,2,0,0,1],
[2016,8,26,9,9,56,2,0,0,0],
[2016,8,29,9,9,18,3,1,0,0],
[2016,8,13,9,12,45,3,0,0,1],
[2016,7,10,9,11,32,3,1,1,0],
[2016,7,5,9,12,38,2,1,0,0],
[2016,8,6,9,15,1,2,1,1,1],
[2016,7,30,9,11,38,2,1,0,1],
[2016,8,11,9,12,16,1,1,0,0],
[2016,7,8,9,11,9,2,0,1,0],
[2016,8,6,9,15,33,2,0,1,0],
[2016,8,22,9,13,26,2,1,0,1],
[2016,8,29,9,9,42,3,0,1,0],
[2016,8,31,9,11,15,2,0,1,1],
[2016,7,25,9,15,53,3,1,1,0],
[2016,8,30,9,10,22,2,1,0,1],
[2016,7,15,9,13,57,3,0,0,0],
[2016,7,29,9,10,19,3,1,1,0],
[2016,7,9,9,9,16,1,1,0,1],
[2016,8,9,9,14,53,2,0,0,1],
[2016,7,16,9,13,37,2,1,1,1],
[2016,8,18,9,10,17,2,0,0,0],
[2016,7,12,9,10,54,1,1,1,1],
[2016,7,29,9,12,40,1,0,0,0],
[2016,7,13,9,13,9,1,0,1,1],
[2016,8,8,9,14,44,2,1,0,1],
[2016,7,21,9,9,47,2,0,1,0],
[2016,7,21,9,14,59,2,0,0,1],
[2016,7,13,9,10,46,2,0,1,1],
[2016,7,28,9,10,28,2,0,1,0]]
Year = []
Mo = []
Da = []
H = []
M = []
S = []
ID = []
CS = []
PS = []
Flag = []
for i in range(len(D)):
    Year.append(D[i][0])
    Mo.append(D[i][1])
    Da.append(D[i][2])
    H.append(D[i][3])
    M.append(D[i][4])
    S.append(D[i][5])
    ID.append(D[i][6])
    CS.append(D[i][7])
    PS.append(D[i][8])
    Flag.append(D[i][9])
timestamp = ''
#CreatedDataEnd#

#----Get Query Result---#
def Q():
    values = cursor.fetchall()
    return values

#----Event Insertion Method----#
def insertEvent(thisID,thisCS,thisPS,thisFlag):
    now = datetime.datetime.today()
    cursor.execute("select time from event where Dname = %s order by time DESC limit 1",(thisID,))
    last = Q()

    # Low pass filter
    CutOffPeriod = 10 #if two events occur within this number of seconds, ignore them.
    if (len(last)>0):
        if (now - last[0][0] >= datetime.timedelta(0,CutOffPeriod)):
            cursor.execute('insert into event (time, Dname, Cstatus, Pstatus, Flag) values (%s, %s, %s, %s, %s)', (datetime.datetime.today(), thisID, thisCS, thisPS, thisFlag))
            print now, "\t Done Insertion."
    else:
        cursor.execute('insert into event (time, Dname, Cstatus, Pstatus, Flag) values (%s, %s, %s, %s, %s)', (datetime.datetime.today(), thisID, thisCS, thisPS, thisFlag))
        print now, "\t Done Insertion."

#InsertCreatedData:
for i in range(len(S)):
    timestamp = '%d-%d-%d %d:%d:%d' % (Year[i],Mo[i],Da[i],H[i],M[i],S[i])
    try:
        cursor.execute("insert into event (time, Dname, Cstatus, Pstatus, Flag) values (%s, %s, %s, %s, %s)",(timestamp,ID[i],CS[i],PS[i],Flag[i]))
    except:
        continue

#Real Event Insertion Simulation:
insertEvent(3,1,0,1)
    #Test
time.sleep(1)
insertEvent(1,1,0,1)
time.sleep(2)
insertEvent(2,1,0,1)
time.sleep(3)
insertEvent(3,1,0,1)
time.sleep(0.5)
insertEvent(1,1,0,1)
time.sleep(0.2)
insertEvent(2,1,0,1)
time.sleep(2)
insertEvent(4,1,0,1)
    #TestEnd

#----end of insert----#


#----for test get today and today's event----#
cursor.execute("select DATE(time) from event ORDER BY time desc limit 1")
today = Q()[0][0]
cursor.execute("select * from event where DATE(time) = %s ORDER BY time desc",(today,))
EventListToday = Q()


#test#
MidTime = time.time()
#endTest#

## Once-every-day action ##

cursor.execute("select count(*) from event")
NumOfEvent = Q()[0][0]

#----find nunmber of dates of events----#
cursor.execute("select COUNT(DISTINCT DATE(time)) from event order by time")# select dates where the event happens
TotalEventDate = Q()[0][0]

#----find number of dates of event in specific day of week----#
cursor.execute("select COUNT(DISTINCT DATE(time)) from event where DAYOFWEEK(time) = DAYOFWEEK(%s) ORDER BY time desc",(today,))
DayOfWeekEventDate = Q()[0][0]

#----find number of dates of event on weekdays or weekends----#
if (today.isoweekday() >= 6):
    cursor.execute("select COUNT(DISTINCT DATE(time)) from event where DAYOFWEEK(time) >= 6 ORDER BY time desc")
    WeekendsEventDate = Q()[0][0]
else:
    cursor.execute("select COUNT(DISTINCT DATE(time)) from event where DAYOFWEEK(time) <= 5 ORDER BY time desc")
    WeekdayssEventDate = Q()[0][0]

#----find nunmber of devices----#
cursor.execute("select distinct Dname from event where DATE(time) = %s",(today,))
DeviceListToday = [i[0] for i in Q()]
lenDevices = len(DeviceListToday)

#----find the number of dates where certain condition matches----#
Pattern = [] #Currently stores device ID and time to operate.
PsbltOccur = [] #stores confidence level for each event.
TimeRange = datetime.timedelta(0, 1800)#the time interval within which we consider events as "similar events"
ThreasholdLevel = 0.80 # Recognize a pattern if its confidence level above this value.

for event in EventListToday:
    #Calculate statistic probability and confidence level here
    UpperBound = (event[0]+TimeRange).time()
    LowerBound = (event[0]-TimeRange).time()
    cursor.execute("select COUNT(DISTINCT DATE(time)) from event where TIME(time) >= %s and TIME(time) <= %sand Dname = %s",(LowerBound,UpperBound,event[1]))
    x = Q()[0][0]
    DateProbability = float(x)/TotalEventDate
    Confidence = (1.0-1.0/(1.2**float(TotalEventDate)))*DateProbability #Sigmoid Function to compensate the influence of sample size.
    PsbltOccur.append([event,Confidence])

    #Store recognized pattern.
    if Confidence>=ThreasholdLevel:
        cursor.execute("select HOUR(time),MINUTE(time),SECOND(time) from event where TIME(time) >= %s and TIME(time) <= %sand Dname = %s",(LowerBound,UpperBound,event[1]))
        y = Q()
        Phour = 0
        Pmin = 0
        Psec = 0
        for k in range(len(y)):
            Phour += y[k][0]
            Pmin += y[k][1]
            Psec += y[k][2]
        Pattern.append([event[1],[Phour/len(y), Pmin/len(y), Psec/len(y)], Confidence])
#Test#
for i in PsbltOccur:
    print i
print '\nPattern Confidence Status:\n', PsbltOccur, '\n'
print 'Control Rules:\n'
#EndTest#


for i in range(len(Pattern)):
    print 'DeviceID: ', Pattern[i][0], ',\t Time to control: ', Pattern[i][1][0],':',Pattern[i][1][1],':',Pattern[i][1][2], ',\tConfidence Level and some test data: ', Pattern[i][2]


#test#
FinalTime = time.time()
print '\ninsertion takes', MidTime-StartTime, ' sec,'
print 'calculation takes', FinalTime-MidTime, ' sec.\n'
#endTest#

#Test#
def shownum(a,b):
    cursor.execute("select HOUR(time),MINUTE(time),SECOND(time) from event where HOUR(time) >= %s and HOUR(time) < %s and Dname = %s", (b*2,b*2+2,a+1))
    values = cursor.fetchall()
    print len(values)
    return values
#endTest#
